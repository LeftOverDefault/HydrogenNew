grammar Hydrogen;

# Language: Hudrogen
# Version: 0.1.0
# Author: Michael Goddard
# Description: This file describes the grammar for the Hydrogen Programming Language.

// Parser rules
program: statement* EOF;

statement
    : variableDeclaration
    | classDeclaration
    | functionDeclaration
    | expressionStatement
    ;

variableDeclaration
    : ('let' | 'const') IDENTIFIER ':' type '=' expression ';'
    ;

type
    : 'int'
    | 'str'
    | 'bool'
    | IDENTIFIER
    ;

classDeclaration
    : 'class' IDENTIFIER '{' classBody '}'
    ;

classBody
    : methodDeclaration*
    ;

methodDeclaration
    : 'mthd' IDENTIFIER '(' parameterList? ')' block
    ;

functionDeclaration
    : 'func' IDENTIFIER '(' parameterList? ')' '->' returnType block
    ;

returnType
    : type ('|' type)*
    ;

parameterList
    : IDENTIFIER (',' IDENTIFIER)*
    ;

block
    : '{' statement* '}'
    ;

expressionStatement
    : expression ';'
    ;

expression
    : IDENTIFIER
    | LITERAL
    | IDENTIFIER '(' argumentList? ')'
    | expression binaryOperator expression
    | '(' expression ')'
    ;

binaryOperator
    : '+' | '-' | '*' | '/' | '==' | '>' | '<'
    ;

argumentList
    : expression (',' expression)*
    ;

// Lexer rules
LITERAL
    : INT_LITERAL
    | STRING_LITERAL
    | BOOL_LITERAL
    ;

INT_LITERAL
    : [0-9]+ ('_' [0-9]+)*
    ;

STRING_LITERAL
    : '"' ~('"')* '"'
    ;

BOOL_LITERAL
    : 'true' | 'false'
    ;

IDENTIFIER
    : [a-zA-Z_] [a-zA-Z_0-9]*
    ;

WS
    : [ \t\r\n]+ -> skip
    ;
